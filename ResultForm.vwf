/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 200000.0;
	SIMULATION_TIME = 200000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("C_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("N_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("N_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("N_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("N_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Res")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Res[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("Res[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Res";
}

SIGNAL("out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("N")
{
	MEMBERS = "N_3", "N_2", "N_1", "N_0";
}

GROUP("M")
{
	MEMBERS = "M_3", "M_2", "M_1", "M_0";
}

TRANSITION_LIST("C_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4000;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("M_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("M_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("M_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200000.0;
	}
}

TRANSITION_LIST("M_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("N_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("N_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200000.0;
	}
}

TRANSITION_LIST("N_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200000.0;
	}
}

TRANSITION_LIST("N_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("Res[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 44300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 8700.0;
	}
}

TRANSITION_LIST("Res[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 41300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 11700.0;
	}
}

TRANSITION_LIST("Res[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 14700.0;
	}
}

TRANSITION_LIST("Res[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 17700.0;
	}
}

TRANSITION_LIST("Res[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 20700.0;
	}
}

TRANSITION_LIST("Res[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 23700.0;
	}
}

TRANSITION_LIST("Res[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 26300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 26700.0;
	}
}

TRANSITION_LIST("Res[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 29700.0;
	}
}

TRANSITION_LIST("Res[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 32700.0;
	}
}

TRANSITION_LIST("Res[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 35700.0;
	}
}

TRANSITION_LIST("Res[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 38700.0;
	}
}

TRANSITION_LIST("Res[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 41700.0;
	}
}

TRANSITION_LIST("Res[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 44700.0;
	}
}

TRANSITION_LIST("Res[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5300.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 2700.0;
	}
}

TRANSITION_LIST("Res[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 45000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2700.0;
	}
}

TRANSITION_LIST("Res[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2300.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 45000.0;
			LEVEL 1 FOR 3000.0;
		}
		LEVEL 0 FOR 5700.0;
	}
}

TRANSITION_LIST("out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300.0;
		NODE
		{
			REPEAT = 65;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1800.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1500.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "C_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "M_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "M_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "M_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "M_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "N";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "N_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "N_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "N_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "N_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Res";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "Res[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "Res[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 3500000;
	MASTER = TRUE;
}
;
